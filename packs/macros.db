{"_id":"6Jeo1DIRZLYRbBPR","name":"Generate Character","type":"script","author":"ZTTE7wBZkO9sADJG","img":"systems/sab/tokens/extra/gold-piece.webp","scope":"global","command":"function formResult(input, output) {\n      return `<tr><td style='text-align:left'><b>${input}: </b></td><td>${output}</td></tr>`;\n  }\n      \n      async function getTableAndRoll(tableName) {\n              let thing = await game.tables.contents.find(t => t.name === tableName).roll();\n              return thing.results[0].data.text.toLowerCase();\n      }\n\n      function totalDiceTermResults(diceTermResults) {\n        return diceTermResults.reduce((total, diceTermResult) => total + diceTermResult.result, 0);\n      }\n      \n      async function Create() {\n        // attributes\n        let allroll = await new Roll(\"3d6[bloodmoon]+3d6[cold]+3d6[force]\").roll({async: true});\n        let strength = totalDiceTermResults(allroll.dice[0].results);\n        let dexterity = totalDiceTermResults(allroll.dice[1].results);\n        let will = totalDiceTermResults(allroll.dice[2].results);\n        // other stats\n        let hp = new Roll(\"1d6\").roll({async: false}).total;\n        let gold = new Roll(\"3d6\").roll({async: false}).total;\n        let age = new Roll(\"2d10+10\").roll({async: false}).total;\n        // name\n        let maleNamesTable = game.tables.contents.find(t => t.name === \"Male Names\");\n        let femaleNamesTable = game.tables.contents.find(t => t.name === \"Female Names\");\n        let firstName = \"\";\n        let genderTable = Math.random() < 0.5 ? await maleNamesTable.roll() : await femaleNamesTable.roll();\n        firstName += genderTable.results[0].data.text;\n        const surnameTable = await game.tables.contents.find(t => t.name === \"Surnames\").roll();\n        const surname = surnameTable.results[0].data.text;\n        const characterName = firstName + \" \" + surname;\n        // biography\n        const face = await getTableAndRoll(\"Face\");\n        const hair = await getTableAndRoll(\"Hair\");\n        const skin = await getTableAndRoll(\"Skin\");\n        const physique = await getTableAndRoll(\"Physique\");\n        const misfortune = await getTableAndRoll(\"Misfortunes\");\n        const reputation = await getTableAndRoll(\"Reputation\");\n        const speech = await getTableAndRoll(\"Speech\");\n        const vice = await getTableAndRoll(\"Vice\");\n        const virtue = await getTableAndRoll(\"Virtue\");\n        const clothing = await getTableAndRoll(\"Clothing\");\n        const characterBackground = await getTableAndRoll(\"Background\");\n        let biography = `I have a <strong>${physique}</strong> physique, <strong>${skin}</strong> skin, <strong>${hair}</strong> hair, and a <strong>${face}</strong> face. I speak in a <strong>${speech}</strong> manner and wear <strong>${clothing}</strong> clothing. I am <strong>${vice}</strong> yet <strong>${virtue}</strong>, and I am generally regarded as <strong>${reputation}</strong>. I have had the misfortune of being <strong>${misfortune}</strong>. I am <strong>${age}</strong> years old.`;\n        let actorData = {\n              name: characterName,\n          background: characterBackground,\n          biography: biography,\n          hp: { value: hp, max: hp },\n          gold: gold,\n          \"abilities\": {\n                \"STR\": {\n                  \"value\": strength,\n              \"max\": strength\n        },\n            \"DEX\": {\n                  \"value\": dexterity,\n              \"max\": dexterity\n        },\n            \"WIL\": {\n                  \"value\": will,\n              \"max\": will\n        }\n      },\n    };\n        let items = [];\n      \n        const data = duplicate(game.items.getName(\"Rations\"));\n        data.data.quantity = 3;\n        items.push(data);\n      \n        const torch = game.items.find(i => i.name === \"Torch\");\n        items.push(torch.data);\n      \n        async function checkAndGetItemFromSubTable(name) {\n              if (SUB_TABLE_NAMES.includes(name)) {\n                let subRoll = await game.tables.getName(name).roll();\n            let subResults = subRoll.results;\n            // console.log(\"sub: \" + subresults[0].data.text);\n            return checkAndGetItemFromSubTable(subresults[0].data.text);\n        } else {\n                  return game.items.find(i => i.name === name);\n        }\n    }\n      \n      const TABLE_NAMES = [\"Trinkets\", \"Weapons\", \"Helmets and Shields\", \"Armor\", \"Expeditionary Gear\", \"Bonus Item\"];\n      const SUB_TABLE_NAMES = [\"Weapons\", \"Simple Weapons\", \"One-Handed Melee\", \"Ranged Weapons\", \"Two-Handed Melee\", \"Tools\", \"Trinkets\", \"Expeditionary Gear\", \"Armor\", \"Spellbooks\"]\n    \n      let itemInsert = \"\";\n      function generateItems(items) {\n        return new Promise(async (resolve, reject) => {\n          await TABLE_NAMES.forEach(async tableName => {\n            let theRoll = await game.tables.getName(tableName).roll();\n            let results = theRoll.results;\n            // console.log(\"main: \" + results[0].data.text);\n        \n            let item = undefined;\n        \n            if(results.length) {\n              item = await checkAndGetItemFromSubTable(results[0].data.text);\n            }\n            if (item) {\n              let itemClicker = \"@Item[\" + item.data.name + \"]\";\n              itemInsert += formResult(tableName, itemClicker);\n              items.push(item.data);\n            } else {\n              itemInsert += formResult(tableName, `None`);\n            }\n            console.count('item created');\n          });\n          resolve({items});\n        });\n      }\n      \n      await generateItems(items).then(async ({items}) => {\n        let actor = await Actor.create({\n          name: characterName,\n          type: \"character\",\n          img: \"icons/svg/mystery-man.svg\",\n          sort: 12000,\n          data: actorData,\n          token: {},\n          items: items,\n          flags: {}\n        });\n      });\n      \n        function postCharToChat() {\n          \n          let statInsert = formResult(\"Strength\", strength) +\n            formResult(\"Dexterity\", dexterity) +\n            formResult(\"Will\", will) + `</table><table style=\"width:22%\">` +\n            formResult(\"HP\", hp) +\n            formResult(\"Gold\", gold) + \"</table>\";\n      \n          let statsMessage = `<table style=\"width:32%\">${statInsert}</table>`;\n          let gearMessage = `<table>${itemInsert}</table>`;\n          let bioMessage = biography;\n      \n          let charInsert = \"@Actor[\" + characterName + \"]\";\n      \n          let chatData = {\n                user: game.user._id,\n            speaker: ChatMessage.getSpeaker(),\n            content: `<h2>${charInsert}</h2>` + statsMessage + gearMessage + bioMessage\n      };\n          ChatMessage.create(chatData, {});\n    }\n      if (game.dice3d) {\n            game.dice3d.showForRoll(allroll).then(happened => {\n              postCharToChat();\n      });\n    } else {\n              postCharToChat();\n    }\n      \n  };\n      Create();","folder":null,"sort":0,"permission":{"default":0,"tw8WBuj1heybSIqW":3,"14a9d04NamzRMVz3":3,"ZTTE7wBZkO9sADJG":3},"flags":{"core":{"sourceId":"Macro.3zRg0cgONbT8eqmY"}}}
